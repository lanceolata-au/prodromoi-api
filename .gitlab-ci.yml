stages:
    - Test
    - Revise
    - Build
    - Release

include:
  - local: '/ci/gitversion-ci-cd-plugin-extension.gitlab-ci.yml' 

Test Api:
  stage: Test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet test ./Prodromoi.Api.Tests/Prodromoi.Api.Tests.csproj --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml

Test Architecture:
  stage: Test
  image: mcr.microsoft.com/dotnet/sdk:6.0
  script:
    - dotnet test ./Prodromoi.Architecture.Tests/Prodromoi.Architecture.Tests.csproj --test-adapter-path:. --logger:"junit;LogFilePath=..\artifacts\{assembly}-test-result.xml;MethodFormat=Class;FailureBodyFormat=Verbose"
  artifacts:
    when: always
    paths:
      - ./**/*test-result.xml
    reports:
      junit:
        - ./**/*test-result.xml


GitVersion:
  stage: Revise
  needs: 
    - Test Api
    - Test Architecture
  extends: .gitversion_function
  only:
    - /^release.*$/
    - /^hotfix.*$/
    - develop

Build API:
  stage: Build
  timeout: 30m
  needs:
    - GitVersion
  before_script:
    - echo "$GitVersion_FullSemVer"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --name multiarch.api --driver docker-container  --config ./ci/config.toml
    - docker buildx build --provenance false --builder multiarch.api -f Dockerfile.Api --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY/$CI_PROJECT_PATH/api:latest .
    - docker buildx build --provenance false --builder multiarch.api -f Dockerfile.Api --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY/$CI_PROJECT_PATH/api:$GitVersion_FullSemVer .
  after_script:
    - docker buildx rm multiarch.api 
  only:
    - /^release.*$/
    - /^hotfix.*$/
    - develop

Build DbManager:
  stage: Build
  timeout: 30m
  needs:
    - GitVersion
  before_script:
    - echo "$GitVersion_FullSemVer"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --name multiarch.dbmanager --driver docker-container --config ./ci/config.toml
    - docker buildx build --provenance false --builder multiarch.dbmanager -f Dockerfile.DbManager --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY/$CI_PROJECT_PATH/dbmanager:latest .
    - docker buildx build --provenance false --builder multiarch.dbmanager -f Dockerfile.DbManager --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY/$CI_PROJECT_PATH/dbmanager:$GitVersion_FullSemVer .
  after_script:
    - docker buildx rm multiarch.dbmanager 
  only:
    - /^release.*$/
    - /^hotfix.*$/
    - develop

Build Service:
  stage: Build
  timeout: 30m
  needs:
    - GitVersion
  before_script:
    - echo "$GitVersion_FullSemVer"
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker buildx create --name multiarch.service --driver docker-container  --config ./ci/config.toml
    - docker buildx build --provenance false --builder multiarch.service -f Dockerfile.Service --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY/$CI_PROJECT_PATH/service:latest .
    - docker buildx build --provenance false --builder multiarch.service -f Dockerfile.Service --platform linux/amd64,linux/arm64 --push -t $CI_REGISTRY/$CI_PROJECT_PATH/service:$GitVersion_FullSemVer .
  after_script:
    - docker buildx rm multiarch.service 
  only:
    - /^release.*$/
    - /^hotfix.*$/
    - develop

Pre-Release:
  stage: Release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - GitVersion
    - Build API
    - Build DbManager
    - Build Service
  script:
    - echo "Pre-release $GitVersion_FullSemVer"
  release:
    name: 'Pre-Release $GitVersion_FullSemVer'
    tag_name: $GitVersion_FullSemVer
    description: |
      New version of Prodromoi backend services
      
      $GitVersion_InformationalVersion
  only:
    - develop

Release:
  stage: Release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - GitVersion
    - Build API
    - Build DbManager
    - Build Service
  script:
    - echo "Pre-release $GitVersion_FullSemVer"
  release:
    name: 'Release $GitVersion_FullSemVer'
    tag_name: $GitVersion_FullSemVer
    description: |
      New version of Prodromoi backend services

      $GitVersion_InformationalVersion
  only:
    - /^release.*$/
    - /^hotfix.*$/